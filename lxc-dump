#!/bin/bash
#
# Autor: Henryk Iwaniuk
#
# lxc-dump <container-name> <path>

echoerr() { echo "error: $@" 1>&2; }

print_help () {
cat << EOF
Usage: ${0##*/} <contaienr> [path]
dump script for lxd containers with lvm storage

Example:
    ${0##*/} guest99 /tmp
EOF
}

random_string () {
    cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w ${1:-32} | head -n 1
}

container_exists () {
	c_exists=$(lxc list $1 | awk -v cont=$1 '($2==cont) {print $2}')
	if [ -z "$c_exists" ]; then
		echoerr 'container does not exist';
		exit 22;
	fi
	return 1;
}

container_is_running () {
	c_running=$(lxc list --format csv -c n,s | grep RUNNING | grep $1)
	if [ -z "$c_running" ]; then
		return 0;
	fi
	return 1;
}

stop_container_if_running () {
    container_is_running $1;
    if [ $? -eq 1 ];
    then
        was_running=1;
        echo "stopping container $1";
        lxc stop $1
    fi
}

start_container_if_was_running () {
    if [ $was_running -eq 1 ]; then
        echo "starting container $1";
        lxc start $1;
    fi
}

if [ -z "$1" ];
then
    print_help;
    exit 0;
fi

was_running=0;
sDatum=`date +%Y_%m_%d-%H_%M_%S`;
hostname=$(hostname);
storage_pool_name="default";
path_to_private="/var/lib/lxd/storage-pools/$storage_pool_name/containers";
vg_name="lxc-$hostname"
path_to_vg="/dev/$vg_name"
default_path="."

container_name=$1;
container_exists $container_name;

sizefile="$path_to_private/$container_name/size.bak"
sizefile_tmp_dir="/tmp/lxc_dump_$(random_string 10)"
tmp_sizefile=""

if [ -z "$2" ];
then
    path=$(realpath "$default_path");
else
    path=$(realpath "$2");
fi

if [ ! -d "$path" ];
then
    echoerr "path $path does not exist.";
    exit 11;
fi

if [ -z "$2" ];
then
    filename=lxc-dump-$container_name-$sDatum.tar.gz;
else
    filename="$3";
fi

echo "Creating dump for container $container_name in $path";

stop_container_if_running $container_name;

mount -o ro $path_to_vg/containers_$container_name $path_to_private/$container_name;

if [ $? -ne 0 ]; then
    echoerr "could not mount container.";
    exit 77;
fi

# check size, create sizefile if not present.
size=$(cat $sizefile)
if [ $? -ne 0 ] || [ -z $size ]; then
    mkdir -p "$sizefile_tmp_dir"
    echo "sizefile does not exist or is not set. creating sizefile.";
    size=$(lvdisplay -C --noheadings --units g -o "lv_size"  $vg_name/containers_$container_name | sed "s/g/GB/" | sed "s/\.[0-9]*//" | sed "s/[ ]*//");
    echo "$size" > "$sizefile_tmp_dir/size.bak"
    tmp_sizefile="$sizefile_tmp_dir/size.bak"
fi

cd $path_to_private/$container_name;
ls;
echo "Compressing container. This might take a while...";
echo "$tmp_sizefile"
tar cf -  --preserve-permissions --numeric-owner . -C "$sizefile_tmp_dir" "size.bak" | pigz -c  > $path/$filename
cd
umount $path_to_private/$container_name;

start_container_if_was_running $container_name;

echo "Done.";