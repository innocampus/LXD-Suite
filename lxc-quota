#!/bin/bash
#
# Autor: Henryk Iwaniuk


# Usage info
show_help () {
cat << EOF
Usage: ${0##*/} <size> <container>
quota script for lxd containers with lvm storage

Example:
    ${0##*/} 20GB guest99
EOF
}

die () {
    printf '%s\n' "$1" >&2
    exit 1
}

POOL_NAME="default"
VG_NAME="lxc-$HOSTNAME"

container=
size=
lvm_block=
type="xfs";
mountpoint=
online=0

while :; do
    case $1 in
        -h|-\?|--help)
            show_help    # Print Usage
            exit
            ;;
        -t|--type)
            if [ -z "$2" ]; then
                die 'missing type parameter'
            fi
            type=$2
            shift
            ;;
        -o|--online)
            online=1;
            ;;
        $1)
            if [ -z "$1" ]; then
                break;
            fi
            if [ -z "$2" ]; then
                die 'ERROR: <size> and <container> arguments expected'
            fi
            container=$2
            size=$1
            shift
            ;;
        -?*)
            printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
            ;;
        *)
            ;;
    esac

    shift
done

confirm () {
    printf "$1\n";
    read -r -p "Are you sure? [y/N] " response
    case "$response" in
        [yY][eE][sS]|[yY])
            return 1;
            ;;
        *)
            die "exit";
            ;;
    esac
}

resize_ext () {
    resize2fs $lvm_block
    if [ $? -ne 0 ]; then
            die "ext filesystem resize failed. note that lv and fs size might be mismatched. exit."
    fi
}

resize_xfs () {
    xfs_growfs $mountpoint
    if [ $? -ne 0 ]; then
            die "xfs filesystem resize failed. note that lv and fs size might be mismatched. exit."
    fi
}

container_exists () {
	c_exists=$(lxc list $1 | awk -v cont=$1 '($2==cont) {print $2}')
	if [ -z "$c_exists" ]; then
		die 'container does not exist';
	fi
	return 1;
}

set_lvm_block () {
    lvm_block="/dev/$VG_NAME/containers_$container"
}

set_mountpoint () {
    mountpoint="/var/lib/lxd/storage-pools/$POOL_NAME/containers/$container"
}

container_set_size () {
    printf "trying to set a new root device\n";
    lxc config device add $container root disk pool=$POOL_NAME path=/ size=$size
    if [ $? -ne 0 ]; then
            printf "trying to change existing root device instead\n";
            lxc config device set $container root size $size
    fi
}

update_container_config () {
    container_set_size;
    lxc config unset $container volatile.apply_quota
}

container_restart () {
    lxc restart $container;
}

container_exists $container;

if [ "$online" -eq "0" ]; then
    confirm "This will restart the container.";
    container_set_size;
    container_restart;
else
    set_lvm_block;
    set_mountpoint;

    if [ -f $mountpoint/size.bak ]; then
        rm "$mountpoint/size.bak";
    fi

    lvextend -L $size $lvm_block
    update_container_config;
    e2fsck -f $lvm_block

    if [ "$type" == "ext" ]; then
        resize_ext;
    elif [ "$type" == "xfs" ]; then
        resize_xfs;
    fi
fi
